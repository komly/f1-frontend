{"version":3,"sources":["serviceWorker.js","api.js","components/pages/DriverListPage.js","components/pages/DriverDetailPage.js","index.js"],"names":["Boolean","window","location","hostname","match","API_URL","process","api","driversList","_driversList","Object","asyncToGenerator","regenerator_default","a","mark","_callee","page","limit","offset","_ref","data","totalPages","wrap","_context","prev","next","axios","get","concat","sent","Math","ceil","parseInt","MRData","total","abrupt","drivers","DriverTable","Drivers","stop","this","_x","apply","arguments","loadDriverDetail","_loadDriverDetail","_callee2","driverId","_ref2","_ref3","resultsData","_context2","driver","races","RaceTable","Races","_x2","DriverListPage","state","loading","handlePageChange","pageNumber","_this","props","history","push","currentPage","params","page_num","loadDrivers","setState","then","_this2","newProps","_this3","_this$state","react_default","createElement","Container","Table","basic","Header","Row","HeaderCell","Body","map","key","Cell","Link","to","givenName","familyName","nationality","href","url","dateOfBirth","Pagination","defaultActivePage","onPageChange","e","target","attributes","value","Component","DriverDetailPage","driver_id","race","raceName","round","season","date","ReactDOM","render","BrowserRouter","basename","Menu","secondary","pointing","Item","name","active","as","Switch","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78512f96.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport default {\n  async driversList(page) {\n    const limit = 10;\n    const offset = (page - 1) * 10;\n    const { data } = await axios.get(API_URL + `f1/drivers.json?limit=${limit}&offset=${offset}`);\n    const totalPages = Math.ceil(parseInt(data.MRData.total, 10) / limit);\n    return {\n      drivers: data.MRData.DriverTable.Drivers,\n      totalPages,\n    };\n  },\n  async loadDriverDetail(driverId) {\n    const { data } = await axios.get(API_URL + `f1/drivers/${driverId}.json`);\n    const { data: resultsData } = await axios.get(API_URL + `f1/drivers/${driverId}/results.json`);\n    return {\n      driver: data.MRData.DriverTable.Drivers[0],\n      races: resultsData.MRData.RaceTable.Races,\n    };\n  },\n};\n","import React, { Component } from 'react';\nimport { Container, Table, Pagination } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport api from '../../api';\n\nclass DriverListPage extends Component {\n  state = {\n    loading: true,\n    drivers: [],\n    totalPages: 0,\n  };\n\n  componentDidMount() {\n    const currentPage = this.props.match.params.page_num || 1;\n    this.loadDrivers(currentPage);\n  }\n  async loadDrivers(currentPage) {\n    this.setState({\n      currentPage,\n      loading: true,\n    });\n\n    api.driversList(currentPage).then(({ drivers, totalPages }) => {\n      this.setState({\n        drivers,\n        loading: false,\n        totalPages,\n      });\n    });\n  }\n  componentWillReceiveProps(newProps) {\n    if (newProps.match.params.page_num !== this.props.match.params.page_num) {\n      this.loadDrivers(newProps.match.params.page_num || 1);\n    }\n  }\n  handlePageChange = pageNumber => {\n    this.props.history.push(`/drivers/page/${pageNumber}`);\n  };\n  render() {\n    const { drivers, totalPages, currentPage, loading } = this.state;\n    return (\n      <Container>\n        {loading && <div>Loading...</div>}\n        {!loading && (\n          <div>\n            <Table basic=\"very\">\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Name</Table.HeaderCell>\n                  <Table.HeaderCell>Nationality</Table.HeaderCell>\n                  <Table.HeaderCell>Wikipedia link</Table.HeaderCell>\n                  <Table.HeaderCell>Birthdate</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                {drivers.map(driver => (\n                  <Table.Row key={driver.driverId}>\n                    <Table.Cell>\n                      <Link to={`/drivers/${driver.driverId}`}>\n                        {driver.givenName} {driver.familyName}\n                      </Link>\n                    </Table.Cell>\n                    <Table.Cell>{driver.nationality}</Table.Cell>\n                    <Table.Cell>\n                      <a href={driver.url}>{driver.url}</a>\n                    </Table.Cell>\n                    <Table.Cell>{driver.dateOfBirth}</Table.Cell>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n            <Pagination\n              defaultActivePage={currentPage}\n              totalPages={totalPages}\n              onPageChange={e => {\n                this.handlePageChange(e.target.attributes.value.value);\n              }}\n            />\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default DriverListPage;\n","import React, { Component } from 'react';\nimport api from '../../api';\nimport { Container, Table } from 'semantic-ui-react';\n\nclass DriverDetailPage extends Component {\n  state = {\n    loading: true,\n    driver: null,\n    races: [],\n    currentPage: 0,\n    totalPages: 0,\n  };\n\n  componentDidMount() {\n    this.loadDriverDetail(this.props.match.params.driver_id);\n  }\n  async loadDriverDetail(driverId, currentPage) {\n    this.setState({\n      currentPage,\n      loading: true,\n    });\n    api.loadDriverDetail(driverId).then(({ driver, races }) => {\n      this.setState({\n        driver,\n        races,\n        loading: false,\n      });\n    });\n  }\n  componentWillReceiveProps(newProps) {\n    if (newProps.match.params.driver_id !== this.props.match.params.driver_id) {\n      this.loadDriverDetail(this.props.match.params.driver_id);\n    }\n  }\n  handlePageChange = pageNumber => {\n    this.props.history.push(`/drivers/pages/${pageNumber}`);\n  };\n  render() {\n    const { driver, races, loading } = this.state;\n    return (\n      <Container>\n        {loading && <div>Loading...</div>}\n        {!loading && (\n          <div>\n            <h2>\n              {driver.givenName} {driver.familyName}\n            </h2>\n            <div>Nationality: {driver.nationality}</div>\n            <div>Birthdate: {driver.dateOfBirth}</div>\n            <a href={driver.url}>Wikipedia link</a>\n\n            <Table basic=\"very\">\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Name</Table.HeaderCell>\n                  <Table.HeaderCell>Position</Table.HeaderCell>\n                  <Table.HeaderCell>Season</Table.HeaderCell>\n                  <Table.HeaderCell>Date</Table.HeaderCell>\n\n                  <Table.HeaderCell>Wikipedia link</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                {races.map(race => (\n                  <Table.Row>\n                    <Table.Cell>{race.raceName}</Table.Cell>\n                    <Table.Cell>{race.round}</Table.Cell>\n                    <Table.Cell>{race.season}</Table.Cell>\n                    <Table.Cell>{race.date}</Table.Cell>\n                    <Table.Cell>\n                      <a href={race.url}>{race.url}</a>\n                    </Table.Cell>\n                  </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </div>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default DriverDetailPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { Route, Switch } from 'react-router';\nimport { Container, Menu } from 'semantic-ui-react';\nimport DriverListPage from './components/pages/DriverListPage';\nimport DriverDetailPage from './components/pages/DriverDetailPage';\n\nconst App = () => (\n  <BrowserRouter basename=\"/f1-frontend\">\n    <div>\n      <Container>\n        <Menu secondary pointing>\n          <Menu.Item name=\"drivers\" active={true} as={Link} to=\"/\">\n            Drivers list\n          </Menu.Item>\n        </Menu>\n        <br />\n      </Container>\n      <Switch>\n        <Route exact path=\"/\" component={DriverListPage} />\n        <Route path=\"/drivers/page/:page_num\" component={DriverListPage} />\n        <Route path=\"/drivers/:driver_id\" component={DriverDetailPage} />\n        <Route path=\"/drivers/:driver_id/page/:page_num\" component={DriverDetailPage} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}